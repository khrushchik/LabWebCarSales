#pragma checksum "D:\LabWebCars_last\LabWebCars\LabWebCars\Views\Producers\ProducersMap.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ec650f9caf6177055e45d6b144cd3b36819972c1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Producers_ProducersMap), @"mvc.1.0.view", @"/Views/Producers/ProducersMap.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\LabWebCars_last\LabWebCars\LabWebCars\Views\_ViewImports.cshtml"
using LabWebCars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\LabWebCars_last\LabWebCars\LabWebCars\Views\_ViewImports.cshtml"
using LabWebCars.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec650f9caf6177055e45d6b144cd3b36819972c1", @"/Views/Producers/ProducersMap.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"726bfbd70bac0acca9b2409b6015b6f012dc2cf8", @"/Views/_ViewImports.cshtml")]
    public class Views_Producers_ProducersMap : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\LabWebCars_last\LabWebCars\LabWebCars\Views\Producers\ProducersMap.cshtml"
  
    ViewData["Title"] = "Карта дилерів";

#line default
#line hidden
#nullable disable
            WriteLiteral("    <div class=\"map-responsive\">\r\n        <input type=\"button\" class=\"btn btn-primary\" value=\"Назад\"");
            BeginWriteAttribute("onclick", " onclick=\"", 149, "\"", 195, 3);
            WriteAttributeValue("", 159, "location.href=\'", 159, 15, true);
#nullable restore
#line 5 "D:\LabWebCars_last\LabWebCars\LabWebCars\Views\Producers\ProducersMap.cshtml"
WriteAttributeValue("", 174, Url.Action("Index"), 174, 20, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 194, "\'", 194, 1, true);
            EndWriteAttribute();
            WriteLiteral(@" />
        <div id=""map"" style=""width: 1000px; height:1000px""></div>
        <br />
    </div>


<script>
    let map;
    function Initialize() {
        fetch('https://localhost:44370/api/producers1')
            .then(data => data.json())
            .then(data => initMap(data));

    }
    function initMap(data) {
        let LatLngs = data.map(producer => producer.country)
        map = new google.maps.Map(document.getElementById(""map""), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 6,
        });
        let lat;
        let lng;
        console.log(LatLngs);
        data.forEach((value, index) => {
            let latLng = value.country;
            let splitted = latLng.split(', ');
            lat = +splitted[0];
            lng = +splitted[1];
            console.log(lat);
            console.log(lng);
            let myMarkerOptions = {
                position: new google.maps.LatLng(lat, lng),
                map: map
            }
    ");
            WriteLiteral(@"        let myMarker = new google.maps.Marker(myMarkerOptions);
            const infoString = value.name + '</br>' + value.info + '</br>';// + '<img src =""' + value.Icon + '"">';
            console.log('info string is ', infoString);
            // infoString - это место, где собирается контент того, что будет в подсказке к маркеру. Вставляй туда, что хочешь, там обыч
            var infowindow = new google.maps.InfoWindow({
                content: infoString
            });
            myMarker.addListener('click', function () {
                infowindow.open(map, myMarker);
            });

        });
        map.setCenter(new google.maps.LatLng(lat, lng));
    }

</script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
